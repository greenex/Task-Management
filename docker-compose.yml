version: "3.8"

services:
  db:
    image: postgres:15
    container_name: postgres_db
    restart: always
    env_file: .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7
    container_name: redis_broker
    restart: always
    ports:
      - "6379:6379"

  backend:
    build: .
    environment:
      - DJANGO_ENV=${DJANGO_ENV}
      - DJANGO_SETTINGS_MODULE=project.settings
    container_name: django_backend
    restart: always
    depends_on:
      - db
      - redis
    env_file: .env
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app  # Mount backend folder inside the container
    #command: ["python", "manage.py", "runserver", "0.0.0.0:8000"]
    command: sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"

  celery_worker:
    build: .
    command: celery -A project worker --loglevel=info
    depends_on:
      - backend
      - redis
    environment:
      - DJANGO_SETTINGS_MODULE=project.settings
    env_file: .env

  celery_beat:
    build: .
    container_name: celery_beat
    command: celery -A project beat --loglevel=info
    depends_on:
      - backend
      - redis
      - celery_worker
    environment:
      - DJANGO_SETTINGS_MODULE=project.settings
    env_file: .env
volumes:
  postgres_data:
